<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
      http://www.springframework.org/schema/context
      http://www.springframework.org/schema/context/spring-context-4.1.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <context:property-placeholder location="classpath:persistence-mysql.properties" />

    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="annotatedClasses">
            <list>
                <value>com.hermes.domain.users.BasicUser</value>
                <value>com.hermes.domain.users.BasicUser</value>
                <value>com.hermes.domain.users.RepresentedUser</value>

                <value>com.hermes.domain.employees.AbstractEmployee</value>
                <value>com.hermes.domain.employees.AbstractDriver</value>
                <value>com.hermes.domain.employees.BasicDriver</value>

                <value>com.hermes.domain.vehicles.AbstractVehicle</value>
                <value>com.hermes.domain.vehicles.AbstractTruck</value>
                <value>com.hermes.domain.vehicles.AbstractSolidTruck</value>
                <value>com.hermes.domain.vehicles.BasicTruck</value>

                <value>com.hermes.domain.cargo.AbstractCargo</value>
                <value>com.hermes.domain.cargo.AbstractSolidCargo</value>
                <value>com.hermes.domain.cargo.Box</value>

                <value>com.hermes.domain.places.AbstractPlace</value>
                <value>com.hermes.domain.places.AbstractBase</value>
                <value>com.hermes.domain.places.AbstractFix</value>
                <value>com.hermes.domain.places.BasicClientBase</value>
                <value>com.hermes.domain.places.BasicCompanyBase</value>
                <value>com.hermes.domain.places.BasicFix</value>

                <value>com.hermes.domain.hauls.AbstractHaul</value>
                <value>com.hermes.domain.hauls.BasicHaul</value>

                <value>com.hermes.domain.milestones.AbstractMilestone</value>
                <value>com.hermes.domain.milestones.StartMilestone</value>
                <value>com.hermes.domain.milestones.FinishMilestone</value>

                <value>com.hermes.domain.orders.AbstractOrder</value>
                <value>com.hermes.domain.orders.BasicOrder</value>
            </list>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
            </props>
        </property>
    </bean>

    <bean id="dataSource"
          class="org.apache.tomcat.dbcp.dbcp.BasicDataSource">
        <property name="driverClassName" value="${jdbc.driverClassName}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.user}" />
        <property name="password" value="${jdbc.pass}" />
    </bean>

    <bean id="transactionManager"
          class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>

    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="get*" read-only="true" />
            <tx:method name="contains*" read-only="true" />
            <tx:method name="*" />
        </tx:attributes>
    </tx:advice>

    <aop:config>
        <aop:pointcut id="userServicePointCut"
                      expression="execution(* com.hermes.infrastructure.dataaccess.repositories.*Repository.*(..))" />
        <aop:advisor advice-ref="txAdvice" pointcut-ref="userServicePointCut" />
    </aop:config>

    <bean id="persistenceExceptionTranslationPostProcessor"
          class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>

    <!-- //////////////////////////////////////////////////////////////////////////////////// -->

    <!-- <bean id="genericDao"
          abstract="true"
          class="com.hermes.infrastructure.dataaccess.repositories.GenericDao">
        <constructor-arg ref="sessionFactory"/>
    </bean> -->

    <bean id="genericRepository"
          abstract="true"
          class="com.hermes.infrastructure.dataaccess.repositories.GenericRepositoryImpl">
        <constructor-arg ref="sessionFactory"/>
    </bean>

    <bean id="cargoRepository"
          class="com.hermes.infrastructure.dataaccess.repositories.CargoRepositoryImpl"
          parent="genericRepository">
        <constructor-arg type = "java.lang.Class">
            <value>com.hermes.domain.cargo.AbstractCargo</value>
        </constructor-arg>
    </bean>

    <bean id="orderRepository"
          class="com.hermes.infrastructure.dataaccess.repositories.OrderRepositoryImpl"
          parent="genericRepository">
        <constructor-arg type = "java.lang.Class">
            <value>com.hermes.domain.orders.AbstractOrder</value>
        </constructor-arg>
    </bean>

    <bean id="haulRepository"
          class="com.hermes.infrastructure.dataaccess.repositories.HaulRepositoryImpl"
          parent="genericRepository">
        <constructor-arg type = "java.lang.Class">
            <value>com.hermes.domain.hauls.AbstractHaul</value>
        </constructor-arg>
    </bean>

    <bean id="employeeRepository"
          class="com.hermes.infrastructure.dataaccess.repositories.EmployeeRepositoryImpl"
          parent="genericRepository">
        <constructor-arg type = "java.lang.Class">
            <value>com.hermes.domain.employees.AbstractEmployee</value>
        </constructor-arg>
    </bean>

    <bean id="vehicleRepository"
          class="com.hermes.infrastructure.dataaccess.repositories.VehicleRepositoryImpl"
          parent="genericRepository">
        <constructor-arg type = "java.lang.Class">
            <value>com.hermes.domain.vehicles.AbstractVehicle</value>
        </constructor-arg>
    </bean>

    <bean id="milestoneRepository"
          class="com.hermes.infrastructure.dataaccess.repositories.MilestoneRepositoryImpl"
          parent="genericRepository">
        <constructor-arg type = "java.lang.Class">
            <value>com.hermes.domain.milestones.AbstractMilestone</value>
        </constructor-arg>
    </bean>

    <bean id="placeRepository"
          class="com.hermes.infrastructure.dataaccess.repositories.PlaceRepositoryImpl"
          parent="genericRepository">
        <constructor-arg type = "java.lang.Class">
            <value>com.hermes.domain.places.AbstractPlace</value>
        </constructor-arg>
    </bean>

    <bean id="userRepository"
          class="com.hermes.infrastructure.dataaccess.repositories.UserRepositoryImpl"
          parent="genericRepository">
        <constructor-arg type = "java.lang.Class">
            <value>com.hermes.domain.users.AbstractUser</value>
        </constructor-arg>
    </bean>

    <!-- //////////////////////////////////////////////////////////////////////////////////// -->

    <bean id="repositories"
          class="com.hermes.infrastructure.dataaccess.repositories.Repositories">
        <constructor-arg ref="cargoRepository"/>
        <constructor-arg ref="employeeRepository"/>
        <constructor-arg ref="haulRepository"/>
        <constructor-arg ref="milestoneRepository"/>
        <constructor-arg ref="orderRepository"/>
        <constructor-arg ref="placeRepository"/>
        <constructor-arg ref="vehicleRepository"/>
        <constructor-arg ref="userRepository"/>
    </bean>

</beans>